# Note(Dan): Added a sync before the reboot as I've seen some
#            instances where the HD is becoming corrupted after these
#            reboots are done. I believe this should fix the issue.
- name: Sync Disks
  command: sync

- name: Reboot system.
  shell: |
    /usr/bin/sleep 2s
    /usr/sbin/shutdown -r -f now
  # /usr/bin/systemctl reboot -i
  # command: systemctl reboot
  async: 1
  poll: 0
  ignore_errors: true
  changed_when: false

# Note(Dan): Note we would normally use the normal wait_for module method
#            however vagrant proxy forwards ssh making it difficult to
#            determine when the port is open/closed without trying to connect
#            to it.
- name: Determine reboot has started by checking SSH connectivity.
  shell: >-
    ssh
    -o UserKnownHostsFile=/dev/null
    -o StrictHostKeyChecking=no
    -o ConnectTimeout=1
    -o ConnectionAttempts=1
    -o PreferredAuthentications=publickey
    -o PubkeyAuthentication=yes
    -o PasswordAuthentication=no
    -o IdentityFile={{role_path}}/files/reboot_system
    {{rs.user}}@{{rs.host}} -p {{rs.port}} 'echo succeeded'
  delegate_to: localhost
  register: ssh_result
  until: ssh_result|failed
  retries: 600
  delay: 1
  failed_when: false
  changed_when: false
  ignore_errors: yes

# Note(Dan): Note we would normally use the normal wait_for module method
#            however vagrant proxy forwards ssh making it difficult to
#            determine when the port is open/closed without trying to connect
#            to it.
- name: Determine reboot has completed by checking SSH connectivity.
  shell: >-
    ssh
    -o UserKnownHostsFile=/dev/null
    -o StrictHostKeyChecking=no
    -o ConnectTimeout=1
    -o ConnectionAttempts=1
    -o PreferredAuthentications=publickey
    -o PubkeyAuthentication=yes
    -o PasswordAuthentication=no
    -o IdentityFile={{role_path}}/files/reboot_system
    {{rs.user}}@{{rs.host}} -p {{rs.port}} 'echo succeeded'
  delegate_to: localhost
  register: ssh_result
  until:
    - ssh_result|succeeded
    - ssh_result.stdout|default('failed') == 'succeeded' 
  retries: 600
  delay: 1
  failed_when: false
  changed_when: false
  ignore_errors: yes
